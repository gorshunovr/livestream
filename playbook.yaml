---
- hosts: localhost

  vars:
    - icecast_address: localhost

  vars_prompt:
    - name: "icecast_password"
      prompt: "Icecast password"
      default: ""
    - name: "linkmeup_vnc_password"
      prompt: "linkmeup VNC password"
      default: ""
    # https://teamspeak.com/en/downloads/#server
    - name: teamspeak_server_version
      prompt: "Teamspeak server version"
      default: "3.12.1"
    - name: "teamspeak_server_checksum"
      prompt: "Teamspeak server checksum"
      default: "cfbffba30a570f0ba33a74ce5e5dbda54ce564d917a27183cdcaf82cc2b4abb7"
    # https://teamspeak.com/en/downloads/#client
    - name: "teamspeak_client_version"
      prompt: "Teamspeak client version"
      default: "3.5.2"
    - name: "teamspeak_client_checksum"
      prompt: "Teamspeak client checksum"
      default: "d739fa78b41ef7b1423771ca237804981ffc7f14c4e620769cfa3fbc538aece8"

  tasks:
    - name: Check for required variables
      tags:
        - vars
      fail:
        msg: "Please, define required password variables"
      when: vars[item] is not defined or vars[item] == ""
      with_items:
        - icecast_password
        - linkmeup_vnc_password
    - name: Install system software
      become: "yes"
      tags:
        - system
      block:
        - name: Install software
          apt:
            name:
              # TODO: split icecast2 onto a separate server
              - icecast2
              - audacious
              - darkice
              - ansible-lint
              - tmux
              - curl
              - tigervnc-standalone-server
        - name: Enable icecast2
          lineinfile:
            path: /etc/default/icecast2
            regexp: '^ENABLE='
            line: 'ENABLE=true'
        - name: Setup icecast2 server location
          xml:
            path: /etc/icecast2/icecast.xml
            xpath: /icecast/location
            value: "Moscow, Russia"
          notify:
            - restart icecast2
        - name: Setup icecast2 server admin email
          xml:
            path: /etc/icecast2/icecast.xml
            xpath: /icecast/admin
            value: "info@linkmeup.ru"
          notify:
            - restart icecast2
        - name: Setup icecast2 server hostname
          xml:
            path: /etc/icecast2/icecast.xml
            xpath: /icecast/hostname
            value: "linkmeup.ru"
          notify:
            - restart icecast2
        - name: Setup icecast2 server source password
          xml:
            path: /etc/icecast2/icecast.xml
            xpath: /icecast/authentication/source-password
            value: "{{ icecast_password }}"
          notify:
            - restart icecast2
        - name: Setup icecast2 server relay password
          xml:
            path: /etc/icecast2/icecast.xml
            xpath: /icecast/authentication/relay-password
            value: "{{ icecast_password }}"
          notify:
            - restart icecast2
        - name: Setup icecast2 server admin password
          xml:
            path: /etc/icecast2/icecast.xml
            xpath: /icecast/authentication/admin-password
            value: "{{ icecast_password }}"
          notify:
            - restart icecast2
        - name: Setup icecast2 server default mount charset
          xml:
            path: /etc/icecast2/icecast.xml
            xpath: /icecast/mount[@type='default']/charset
            value: UTF-8
          notify:
            - restart icecast2
        - name: Start icecast2 service on boot
          service:
            name: icecast2
            enabled: "yes"
        - name: Ensure icecast2 service is running now
          service:
            name: icecast2
            state: started

    - name: Add locked linkmeup user
      become: "yes"
      tags:
        - user
      user:
        name: linkmeup
        comment: "linkmeup user"
        password: "!"
        update_password: always
    - name: Configure linkmeup user
      become: "yes"
      become_user: linkmeup
      tags:
        - user
      block:
        - name: Create vnc config dir
          file:
            path: /home/linkmeup/.vnc
            state: directory
        - name: Setup vnc password
          shell: "umask 0066; echo -n {{ linkmeup_vnc_password }} | tigervncpasswd -f > /home/linkmeup/.vnc/passwd"
          args:
            creates: /home/linkmeup/.vnc/passwd
        - name: Ensure password file has correct permissions in case it preexisted
          file:
            path: /home/linkmeup/.vnc/passwd
            mode: 0600
        - name: Download Teamspeak client
          get_url:
            url: "https://files.teamspeak-services.com/releases/client/{{ teamspeak_client_version }}/TeamSpeak3-Client-linux_amd64-{{ teamspeak_client_version }}.run"
            dest: "/home/linkmeup/TeamSpeak3-Client-linux_amd64-{{ teamspeak_client_version }}.run"
            checksum: "sha256:{{ teamspeak_client_checksum }}"

    - name: Setup Teamspeak server
      become: "yes"
      tags:
        - teamspeak
      block:
        - name: Add system teamspeak server user
          user:
            name: teamspeak
            comment: "Teamspeak server user"
            system: "yes"
            create_home: "yes"
            home: "/opt/teamspeak"
            password: "!"
            shell: /usr/sbin/nologin
            update_password: always
        - name: Create Teamspeak server dir for specific version
          file:
            path: "/opt/teamspeak/{{ teamspeak_server_version }}"
            state: directory
        - name: Download teamspeak server
          get_url:
            url: "https://files.teamspeak-services.com/releases/server/{{ teamspeak_server_version }}/teamspeak3-server_linux_amd64-{{ teamspeak_server_version }}.tar.bz2"
            dest: "/opt/teamspeak/{{ teamspeak_server_version }}/teamspeak3-server_linux_amd64-{{ teamspeak_server_version }}.tar.bz2"
            checksum: "sha256:{{ teamspeak_server_checksum }}"
        - name: Unarchive teamspeak server
          unarchive:
            src: "/opt/teamspeak/{{ teamspeak_server_version }}/teamspeak3-server_linux_amd64-{{ teamspeak_server_version }}.tar.bz2"
            dest: "/opt/teamspeak/{{ teamspeak_server_version }}/"
            remote_src: "yes"
            creates: "/opt/teamspeak/{{ teamspeak_server_version }}/teamspeak3-server_linux_amd64"
            owner: teamspeak
            group: teamspeak
        - name: ==CHECK== Check if symlink exists and server has been previously started (database file exists)
          stat:
            path: "/opt/teamspeak/latest/teamspeak3-server_linux_amd64/ts3server.sqlitedb"
          register: tsdatabasefile
        - name: ==CHECK== Check if symlink points to the same version we want to deploy
          stat:
            path: "/opt/teamspeak/latest"
          register: latestsymlink
          when:
            - tsdatabasefile is defined
            - tsdatabasefile.stat.exists
        - name: ==CHECK== Set upgrade flag
          set_fact:
            upgrade: "yes"
          when:
            - latestsymlink.stat is defined
            - '"/opt/teamspeak/" ~ teamspeak_server_version != latestsymlink.stat.lnk_target'
        - name: ==UPGRADE== Ensure Teamspeak is stopped before upgrade
          service:
            name: teamspeak
            state: stopped
          when: upgrade is defined
        - name: ==UPGRADE== Copy over settings and data from old installation
          copy:
            src: "/opt/teamspeak/latest/teamspeak3-server_linux_amd64/{{ item }}"
            dest: "/opt/teamspeak/{{ teamspeak_server_version }}/teamspeak3-server_linux_amd64/"
            owner: teamspeak
            group: teamspeak
          # I hope there are no other files needed
          with_items:
            - files/
            - logs/
            - query_ip_blacklist.txt
            - query_ip_whitelist.txt
            - ssh_host_rsa_key
            - ts3server.sqlitedb
          when: upgrade is defined
        - name: Set symlink to point to the proposed latest Teamspeak version
          file:
            src: "/opt/teamspeak/{{ teamspeak_server_version }}"
            dest: "/opt/teamspeak/latest"
            state: link
            owner: teamspeak
            group: teamspeak
        - name: Install teamspeak service systemd unitfile
          copy:
            dest: /etc/systemd/system/teamspeak.service
            content: |
              [Unit]
              Description=TeamSpeak3 Server
              Wants=network-online.target
              After=syslog.target network.target

              [Service]
              WorkingDirectory=/opt/teamspeak/latest/teamspeak3-server_linux_amd64/
              User=teamspeak
              Group=teamspeak
              Type=forking
              Environment="TS3SERVER_LICENSE=accept"
              ExecStart=/opt/teamspeak/latest/teamspeak3-server_linux_amd64/ts3server_startscript.sh start
              ExecStop=/opt/teamspeak/latest/teamspeak3-server_linux_amd64/ts3server_startscript.sh stop
              ExecReload=/opt/teamspeak/latest/teamspeak3-server_linux_amd64/ts3server_startscript.sh reload
              PIDFile=/opt/teamspeak/latest/teamspeak3-server_linux_amd64/ts3server.pid

              [Install]
              WantedBy=multi-user.target
          register: res
        - name: Reload systemd
          systemd:
            daemon_reload: "yes"
          when: res is changed
        - name: Ensure Teamspeak service starts on boot
          service:
            name: teamspeak
            enabled: "yes"
        # If Teamspeak server starts and immediately stops - remove /dev/shm/7gbhujb54g8z9hu43jre8 file
        - name: Ensure Teamspeak service is running now
          service:
            name: teamspeak
            state: started
        - name: Teamspeak password hint
          debug:
            msg: "See journalctl --unit teamspeak.service for Teamspeak server passwords information."

    - name: Setup DarkIce service
      become: "yes"
      become_user: linkmeup
      tags:
        - darkice
      block:
        - name: Create darkice/darksnow config dir
          file:
            path: /home/linkmeup/.darksnow
            state: directory
            mode: 0750
        # TODO: add stream recording
        - name: Write DarkIce config
          copy:
            dest: /home/linkmeup/.darksnow/darkice.cfg
            mode: 0640
            content: |
              [general]
              duration = 0
              bufferSecs = 10

              [input]
              device = default
              sampleRate = 48000
              bitsPerSample = 16
              channel = 1

              [icecast2-0]
              bitrateMode = cbr
              format = mp3
              bitrate = 128
              quality = 0.8
              server = {{ icecast_address }}
              port = 8000
              password = {{ icecast_password }}
              mountPoint = live
              name = Подкаст linkmeup
              description = Прямой эфир подкаста linkmeup
              url = https://linkmeup.ru/
              genre = Talks
              public = no

        - name: Write DarkSnow config
          copy:
            dest: /home/linkmeup/.darksnow/darksnow.cfg
            mode: 0640
            content: |
              server={{ icecast_address }}
              port=8000
              mountpoint=live
              pass={{ icecast_password }}
              radioname=Подкаст linkmeup
              description=Прямой эфир подкаста linkmeup
              url=https://linkmeup.ru/
              genre=Talks
              icecast=Icecast 2
              format=mp3
              bitrate=128
              bitratemode=Constant
              samplerate=48000
              quality=0.8
              bitspersample=16
              channel=1 - Mono
              buffersize=10
              device=default
              public=no
              verbosity=0
              remotedump=
              localdump=
              adddate=0
        - name: Write DarkIce startup script
          copy:
            dest: /home/linkmeup/Documents/linkmeup/start_darkice.sh
            mode: 0750
            content: |
              #!/bin/bash
              darkice -v 1 -c /home/linkmeup/.darksnow/darkice.cfg

  handlers:
    - name: restart icecast2
      become: "yes"
      service:
        name: icecast2
        state: restarted
    - name: restart teamspeak
      become: "yes"
      service:
        name: teamspeak
        state: restarted

...
